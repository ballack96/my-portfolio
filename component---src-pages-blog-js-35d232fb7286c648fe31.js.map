{"version":3,"file":"component---src-pages-blog-js-35d232fb7286c648fe31.js","mappings":"qLAKA,MAAMA,EAAwBC,IAC5B,IAAKA,EAAM,MAAO,GAElB,MAEMC,GAFS,IAAIC,WACAC,gBAAgBH,EAAM,aACtBI,cAAc,OAEjC,OADAC,QAAQC,IAAI,uBAAwBL,GAC7BA,EAASA,EAAOM,IAAM,EAAE,EAG3BC,EAAuBR,IAC3B,IAAKA,EAAM,MAAO,GAGlB,OAFe,IAAIE,WACAC,gBAAgBH,EAAM,aAC9BS,KAAKC,YAAYC,OAAOC,MAAM,EAAG,KAAO,KAAK,EAiE1D,UA5DiB,KACf,MAAM,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,KAC7B,EAACC,EAAQ,EAACC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACG,EAAM,EAACC,IAAYJ,EAAAA,EAAAA,UAAS,MA+BnC,OA7BAK,EAAAA,EAAAA,YAAU,KACiBC,WACvB,IACE,MAAMC,EAAiB,YACjBC,QAAiBC,EAAAA,EAAMC,IAAI,uCAAwC,CACvEC,OAAQ,CACNC,QAAQ,4BAA6BL,KAIrCC,EAASK,MAAQL,EAASK,KAAKC,QACjCf,EAASS,EAASK,KAAKC,MAAMC,KAAIC,IAAI,CACnCC,MAAOD,EAAKC,MACZC,YAAazB,EAAoBuB,EAAKE,aACtCC,KAAMH,EAAKG,KACXC,MAAOpC,EAAqBgC,EAAKE,kBAEnChB,GAAW,GAEf,CAAE,MAAOC,GACPb,QAAQa,MAAM,+BAAgCA,GAC9CC,EAAS,2DACTF,GAAW,EACb,GAGFmB,EAAkB,GACjB,IAGD,gBAAC,IAAM,KACL,2BAASC,MAAO,CAAEC,QAAS,OAAQC,UAAW,WAC5C,sBAAIF,MAAO,CAAEG,aAAc,OAAQC,SAAU,OAAQC,MAAO,YAAa,iBACxE1B,EACC,qBAAGqB,MAAO,CAAEE,UAAW,WAAY,0BACjCrB,EACF,qBAAGmB,MAAO,CAAEE,UAAW,SAAUG,MAAO,QAAUxB,GAElD,uBAAKmB,MAAO,CAAEM,QAAS,OAAQC,SAAU,OAAQC,IAAK,SAAUC,eAAgB,WAC7EjC,EAAMiB,KAAKiB,GACV,gBAAC,IAAQ,CACPC,IAAKD,EAAQE,GACbjB,MAAOe,EAAQf,MACfC,YAAac,EAAQd,YACrBC,KAAMa,EAAQb,KACdC,MAAOY,EAAQZ,YAMlB,C","sources":["webpack://gatsby-starter-default/./src/pages/blog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Layout from \"../components/layout\";\nimport axios from 'axios';\nimport DataCard from '../components/DataCard';\n\nconst extractImageFromHTML = (html) => {\n  if (!html) return '';\n  // console.log('Raw HTML:', html);\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n  const imgTag = doc.querySelector('img');\n  console.log('Extracted Image Tag:', imgTag);\n  return imgTag ? imgTag.src : '';\n};\n\nconst extractTextFromHTML = (html) => {\n  if (!html) return '';\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n  return doc.body.textContent.trim().slice(0, 150) + '...';\n};\n\n \n\nconst BlogPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMediumPosts = async () => {\n      try {\n        const mediumUsername = 'r.deb1996'; // Replace with your Medium username\n        const response = await axios.get(`https://api.rss2json.com/v1/api.json`, {\n          params: {\n            rss_url: `https://medium.com/feed/@${mediumUsername}`,\n          },\n        });\n\n        if (response.data && response.data.items) {\n          setPosts(response.data.items.map(post => ({\n            title: post.title,\n            description: extractTextFromHTML(post.description),\n            link: post.link,\n            image: extractImageFromHTML(post.description),\n          })));\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching Medium posts:', error);\n        setError('Failed to load GitHub projects. Please try again later.');\n        setLoading(false);\n      }\n    };\n\n    fetchMediumPosts();\n  }, []);\n\n  return (\n    <Layout>\n      <section style={{ padding: '2rem', textAlign: 'center' }}>\n        <h2 style={{ marginBottom: '2rem', fontSize: '2rem', color: '#34495E' }}>My Blog Posts</h2>\n        {loading ? (\n          <p style={{ textAlign: 'center' }}>ðŸ”„ Loading projects...</p>\n        ) : error ? (\n          <p style={{ textAlign: 'center', color: 'red' }}>{error}</p>\n        ) : ( \n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '1.5rem', justifyContent: 'center' }}> \n            {posts.map((project) => (\n              <DataCard\n                key={project.id}\n                title={project.title}\n                description={project.description}\n                link={project.link}\n                image={project.image}\n              />\n            ))}\n          </div>\n          )}\n      </section>\n    </Layout>\n  );\n};\n\nexport default BlogPage;"],"names":["extractImageFromHTML","html","imgTag","DOMParser","parseFromString","querySelector","console","log","src","extractTextFromHTML","body","textContent","trim","slice","posts","setPosts","useState","loading","setLoading","error","setError","useEffect","async","mediumUsername","response","axios","get","params","rss_url","data","items","map","post","title","description","link","image","fetchMediumPosts","style","padding","textAlign","marginBottom","fontSize","color","display","flexWrap","gap","justifyContent","project","key","id"],"sourceRoot":""}