{"version":3,"file":"component---src-pages-using-ssr-js-8408bb0e1f957061f1e0.js","mappings":"uKAyDA,IA5CeA,IAAmB,IAAlB,SAAEC,GAAUD,EAC1B,MAAME,GAAOC,EAAAA,EAAAA,IAAe,cAY5B,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAWJ,EAAKK,KAAKC,aAAaC,QAC1CL,EAAAA,cAAA,OACEM,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGVT,EAAAA,cAAA,YAAOH,GACPG,EAAAA,cAAA,UACEM,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACAb,EAAAA,cAAA,KAAGc,KAAK,4BAA2B,YAGtC,C,+CCJP,IAlCA,SAAYlB,GAAoC,IAADmB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEZ,EAAK,SAAER,GAAUD,EAC3C,MAAM,KAAEO,IAASJ,EAAAA,EAAAA,IAAe,YAc1BmB,EAAkBD,GAAed,EAAKC,aAAaa,YACnDE,EAAgC,QAApBJ,EAAGZ,EAAKC,oBAAY,IAAAW,OAAA,EAAjBA,EAAmBV,MAExC,OACEL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQmB,EAAkBd,EAAK,MAAMc,EAAiBd,GACtDL,EAAAA,cAAA,QAAMoB,KAAK,cAAcC,QAASH,IAClClB,EAAAA,cAAA,QAAMsB,SAAS,WAAWD,QAAShB,IACnCL,EAAAA,cAAA,QAAMsB,SAAS,iBAAiBD,QAASH,IACzClB,EAAAA,cAAA,QAAMsB,SAAS,UAAUD,QAAQ,YACjCrB,EAAAA,cAAA,QAAMoB,KAAK,eAAeC,QAAQ,YAClCrB,EAAAA,cAAA,QAAMoB,KAAK,kBAAkBC,SAA0B,QAAjBL,EAAAb,EAAKC,oBAAY,IAAAY,OAAA,EAAjBA,EAAmBO,SAAM,KAC/DvB,EAAAA,cAAA,QAAMoB,KAAK,gBAAgBC,QAAShB,IACpCL,EAAAA,cAAA,QAAMoB,KAAK,sBAAsBC,QAASH,IACzCrB,EAGP,C,6GCpCA,MA4Ba2B,EAAOA,IAAMxB,EAAAA,cAACyB,EAAAA,EAAG,CAACpB,MAAM,cAErC,UA9BiBT,IAAqB,IAApB,WAAE8B,GAAY9B,EAC9B,OACEI,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAA,UAAI,gBACWA,EAAAA,cAAA,SAAG,yBAElBA,EAAAA,cAAA,SAAG,mHAE4C,IAC7CA,EAAAA,cAAA,YAAM,yCAA4C,KAEpDA,EAAAA,cAAA,OACEM,MAAO,CAAEsB,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKL,EAAWM,UAElBhC,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGc,KAAK,oFAAmF,6CAEvF,KAGNd,EAAAA,cAACiC,EAAAA,GAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["_ref","children","data","useStaticQuery","React","Header","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","width","borderRadius","alt","src","message","Link","to"],"sourceRoot":""}