{"version":3,"file":"component---src-pages-using-typescript-tsx-86ea568441f64df5d6b0.js","mappings":"2NAaA,MAgCaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,mBAAmBC,iBAAaC,EAAWC,cAAUD,IAE7G,UAlCwDE,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCR,EAAAA,cAACS,EAAAA,EAAM,KACLT,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOQ,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCZ,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGa,KAAK,yEAAwE,kCAE5E,KAGNb,EAAAA,cAACc,EAAAA,GAAI,CAACC,GAAG,KAAI,2BACN,C,+EC1CX,EAAe,IAA0B,sDCyBzC,MArBe,IAAoC,IAAnC,UAAEC,EAAY,eAAe,EAC3C,OACE,0BAAQC,MAAO,CAAEC,WAAY,UAAWC,QAAS,SAC/C,uBAAKF,MAAO,CAAEG,OAAQ,OAAQC,SAAS,OAAQC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUL,QAAS,WAC9H,sBAAIF,MAAO,CAAEG,OAAQ,EAAGE,QAAS,OAAQE,WAAY,SAAUC,SAAU,IAAKD,WAAW,SAAUE,WAAW,WAC9G,uBAAKC,IAAKC,EAAeX,MAAO,CAAEY,SAAU,OAAQC,UAAW,OAAQC,YAAa,KAAMC,UAAU,OAAQC,aAAa,UACvH,gBAAC,KAAI,CAAClB,GAAG,IAAIE,MAAO,CAAEiB,MAAO,QAASC,eAAgB,SACnDnB,IAGL,2BACE,gBAAC,KAAI,CAACD,GAAG,WAAWE,MAAO,CAAEiB,MAAO,QAASH,YAAa,SAAUI,eAAgB,SAAU,WAC9F,gBAAC,KAAI,CAACpB,GAAG,YAAYE,MAAO,CAAEiB,MAAO,QAASH,YAAa,SAAUI,eAAgB,SAAU,YAC/F,gBAAC,KAAI,CAACpB,GAAG,QAAQE,MAAO,CAAEiB,MAAO,QAASH,YAAa,SAAUI,eAAgB,SAAU,QAC3F,gBAAC,KAAI,CAACpB,GAAG,WAAWE,MAAO,CAAEiB,MAAO,QAASC,eAAgB,SAAU,aAGpE,C,yDCoCb,IA5Ce,IAAmB,IAAlB,SAAE9B,GAAU,EAC1B,MAAME,GAAO6B,EAAAA,EAAAA,IAAe,cAY5B,OACE,gCACE,gBAAC,IAAM,CAACpB,UAAWT,EAAKI,KAAK0B,aAAanC,QAC1C,uBACEe,MAAO,CACLG,OAAO,SACPS,SAAS,sBACTV,QAAQ,uBAGV,4BAAOd,GACP,0BACEY,MAAO,CACLe,UAAU,iBACVP,SAAS,mBAEZ,MACI,IAAIa,MAAOC,cAAc,gBAC5B,IACA,qBAAG1B,KAAK,4BAA2B,YAGtC,C,+CCJP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEV,EAAW,MAAED,EAAK,SAAEG,GAAU,EAC3C,MAAM,KAAEM,IAASyB,EAAAA,EAAAA,IAAe,YAc1BI,EAAkBrC,GAAeQ,EAAK0B,aAAalC,YACnDsC,EAAgC,QAApB,EAAG9B,EAAK0B,oBAAY,aAAjB,EAAmBnC,MAExC,OACE,gCACE,6BAAQuC,EAAkBvC,EAAK,MAAMuC,EAAiBvC,GACtD,wBAAMwC,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASzC,IACnC,wBAAM0C,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAhC,EAAK0B,oBAAY,aAAjB,EAAmBQ,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASzC,IACpC,wBAAMwC,KAAK,sBAAsBC,QAASH,IACzCnC,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/images/PixarMe.jpg","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" description={undefined} children={undefined} />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","export default __webpack_public_path__ + \"static/PixarMe-7d0715a99b5b0a7608988124900a191b.jpg\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport profileIcon from \"../images/PixarMe.jpg\"\n\nconst Header = ({ siteTitle = \"Ranojoy Deb\" }) => {\n  return (\n    <header style={{ background: '#5F6A6A', padding: '0.5%' }}>\n      <div style={{ margin: 'auto', minWidth:'100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '0 1rem' }}>\n        <h2 style={{ margin: 0, display: 'flex', alignItems: 'center', fontSize: '1', alignItems:'center', whiteSpace:'nowrap' }}>\n        <img src={profileIcon}   style={{ maxWidth: '32px', maxHeight: '32px', marginRight: '5%', marginTop:'auto', marginBottom:'auto' }} />\n          <Link to=\"/\" style={{ color: 'white', textDecoration: 'none' }}>\n            {siteTitle}\n          </Link>\n        </h2>\n        <nav>\n          <Link to=\"/profile\" style={{ color: 'white', marginRight: '0.5rem', textDecoration: 'none' }}>Profile</Link>\n          <Link to=\"/projects\" style={{ color: 'white', marginRight: '0.5rem', textDecoration: 'none' }}>Projects</Link>\n          <Link to=\"/blog\" style={{ color: 'white', marginRight: '0.5rem', textDecoration: 'none' }}>Blog</Link>\n          <Link to=\"/contact\" style={{ color: 'white', textDecoration: 'none' }}>Contact</Link>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","description","undefined","children","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","style","background","padding","margin","minWidth","display","justifyContent","alignItems","fontSize","whiteSpace","src","profileIcon","maxWidth","maxHeight","marginRight","marginTop","marginBottom","color","textDecoration","useStaticQuery","siteMetadata","Date","getFullYear","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}