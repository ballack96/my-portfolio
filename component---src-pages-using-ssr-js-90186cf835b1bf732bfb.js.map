{"version":3,"file":"component---src-pages-using-ssr-js-90186cf835b1bf732bfb.js","mappings":"6LAAA,EAAe,IAA0B,sDC4BzC,MArBe,IAAoC,IAAnC,UAAEA,EAAY,eAAe,EAC3C,OACE,0BAAQC,MAAO,CAAEC,WAAY,UAAWC,QAAS,SAC/C,uBAAKF,MAAO,CAAEG,OAAQ,OAAQC,SAAS,OAAQC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUL,QAAS,WAC9H,sBAAIF,MAAO,CAAEG,OAAQ,EAAGE,QAAS,OAAQE,WAAY,SAAUC,SAAU,IAAKD,WAAW,SAAUE,WAAW,WAC9G,uBAAKC,KAPKC,EAOSC,GAPGC,EAAAA,EAAAA,IAAWF,IAOEX,MAAO,CAAEc,SAAU,OAAQC,UAAW,OAAQC,YAAa,KAAMC,UAAU,OAAQC,aAAa,UACjI,gBAAC,KAAI,CAACC,GAAG,IAAInB,MAAO,CAAEoB,MAAO,QAASC,eAAgB,SACnDtB,IAGL,2BACE,gBAAC,KAAI,CAACoB,GAAG,WAAWnB,MAAO,CAAEoB,MAAO,QAASJ,YAAa,SAAUK,eAAgB,SAAU,WAC9F,gBAAC,KAAI,CAACF,GAAG,YAAYnB,MAAO,CAAEoB,MAAO,QAASJ,YAAa,SAAUK,eAAgB,SAAU,YAC/F,gBAAC,KAAI,CAACF,GAAG,QAAQnB,MAAO,CAAEoB,MAAO,QAASJ,YAAa,SAAUK,eAAgB,SAAU,QAC3F,gBAAC,KAAI,CAACF,GAAG,WAAWnB,MAAO,CAAEoB,MAAO,QAASC,eAAgB,SAAU,cAhB/DV,KAmBL,C,yDCiCb,IA5Ce,IAAmB,IAAlB,SAAEW,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAY5B,OACE,gCACE,gBAAC,IAAM,CAACzB,UAAWwB,EAAKE,KAAKC,aAAaC,QAC1C,uBACE3B,MAAO,CACLG,OAAO,SACPW,SAAS,sBACTZ,QAAQ,uBAGV,4BAAOoB,GACP,0BACEtB,MAAO,CACLiB,UAAU,iBACVT,SAAS,mBAEZ,MACI,IAAIoB,MAAOC,cAAc,gBAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGtC,C,+CCJP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEJ,EAAK,SAAEL,GAAU,EAC3C,MAAM,KAAEG,IAASD,EAAAA,EAAAA,IAAe,YAc1BQ,EAAkBD,GAAeN,EAAKC,aAAaK,YACnDE,EAAgC,QAApB,EAAGR,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQM,EAAkBN,EAAK,MAAMM,EAAiBN,GACtD,wBAAMO,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASR,IACnC,wBAAMS,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAV,EAAKC,oBAAY,aAAjB,EAAmBW,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASR,IACpC,wBAAMO,KAAK,sBAAsBC,QAASH,IACzCV,EAGP,C,6GCpCA,MA4BagB,EAAO,IAAM,gBAAC,IAAG,CAACX,MAAM,cAErC,UA9BiB,IAAqB,IAApB,WAAEY,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACEvC,MAAO,CAAEwC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJhC,IAAK6B,EAAWI,UAElB,yBAAG,kCAC+B,IAChC,qBAAGb,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,KAAI,CAACX,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/images/PixarMe.jpg","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/PixarMe-7d0715a99b5b0a7608988124900a191b.jpg\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport profileIcon from \"../images/PixarMe.jpg\"\nimport { withPrefix } from 'gatsby';\n\nconst prefixed = (imgPath) => withPrefix(imgPath);\n\nconst Header = ({ siteTitle = \"Ranojoy Deb\" }) => {\n  return (\n    <header style={{ background: '#5F6A6A', padding: '0.5%' }}>\n      <div style={{ margin: 'auto', minWidth:'100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '0 1rem' }}>\n        <h2 style={{ margin: 0, display: 'flex', alignItems: 'center', fontSize: '1', alignItems:'center', whiteSpace:'nowrap' }}>\n        <img src={prefixed(profileIcon)}   style={{ maxWidth: '32px', maxHeight: '32px', marginRight: '5%', marginTop:'auto', marginBottom:'auto' }} />\n          <Link to=\"/\" style={{ color: 'white', textDecoration: 'none' }}>\n            {siteTitle}\n          </Link>\n        </h2>\n        <nav>\n          <Link to=\"/profile\" style={{ color: 'white', marginRight: '0.5rem', textDecoration: 'none' }}>Profile</Link>\n          <Link to=\"/projects\" style={{ color: 'white', marginRight: '0.5rem', textDecoration: 'none' }}>Projects</Link>\n          <Link to=\"/blog\" style={{ color: 'white', marginRight: '0.5rem', textDecoration: 'none' }}>Blog</Link>\n          <Link to=\"/contact\" style={{ color: 'white', textDecoration: 'none' }}>Contact</Link>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["siteTitle","style","background","padding","margin","minWidth","display","justifyContent","alignItems","fontSize","whiteSpace","src","imgPath","profileIcon","withPrefix","maxWidth","maxHeight","marginRight","marginTop","marginBottom","to","color","textDecoration","children","data","useStaticQuery","site","siteMetadata","title","Date","getFullYear","href","description","metaDescription","defaultTitle","name","content","property","author","Head","serverData","width","borderRadius","alt","message"],"sourceRoot":""}