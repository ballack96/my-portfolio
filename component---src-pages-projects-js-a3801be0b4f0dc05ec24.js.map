{"version":3,"file":"component---src-pages-projects-js-a3801be0b4f0dc05ec24.js","mappings":"iMASA,MAAMA,EAAsBC,CAAAA,EAAYC,2BAkGxC,UAjFqB,KACnB,MAAM,EAACC,EAAQ,EAAEC,IAAeC,EAAAA,EAAAA,UAAS,KACnC,EAACC,EAAO,EAAEC,IAAcF,EAAAA,EAAAA,WAAS,IACjC,EAACG,EAAK,EAAEC,IAAYJ,EAAAA,EAAAA,UAAS,OAEnCK,EAAAA,EAAAA,YAAU,KACoBC,WAC1B,IACE,MAAMC,EAAiB,YACjBC,QAAiBC,EAAAA,EAAMC,IAAI,gCAAgCH,EAAc,uBAE/E,GAAIC,EAASG,KAAM,CACjB,MAAMC,QAA0BC,QAAQC,IACtCN,EAASG,KAAKI,KAAIT,UAChB,MAAMU,OA7BaV,WAC/B,IACEW,QAAQC,IAAI,+BAAgCC,GAC5C,MAAMX,QAAiBC,EAAAA,EAAMC,IAAI,yCAA0C,CACzEU,OAAQ,CAAEC,MAAOF,EAAOG,YAAa,aACrCC,QAAS,CAAEC,cAAe,aAAa7B,KAGzC,OADAsB,QAAQC,IAAI,qBAAsBV,EAASG,KAAKc,KAAKC,SAC9ClB,EAASG,KAAKc,KAAKC,OAC5B,CAAE,MAAOvB,GAEP,OADAc,QAAQd,MAAM,iCAAkCA,EAAMK,SAAWL,EAAMK,SAASG,KAAOR,EAAMwB,SACtF,qDAAqDC,mBAAmBT,GAAM,qCACvF,GAiBiCU,CAAyBC,EAAQC,MACtD,MAAO,IACFD,EACHC,KAAMD,EAAQC,KACXC,QAAQ,KAAM,KACdA,QAAQ,SAAUC,GAAUA,EAAMC,gBACrClB,QACD,KAGLjB,EAAYa,GACZV,GAAW,EACb,CACF,CAAE,MAAOC,GACPc,QAAQd,MAAM,kCAAmCA,GACjDC,EAAS,2DACTF,GAAW,EACb,GAEFiC,EAAqB,GACpB,IAWH,OACE,gBAAC,IAAM,KACL,2BAASC,MAAO,CAAEC,QAAS,OAAQC,UAAW,WAC9C,sBAAIF,MAAO,CAAEG,aAAc,OAAQC,SAAU,OAAQC,MAAO,YAAa,mBACxExC,EACG,sBAAImC,MAAO,CAAEE,UAAW,WAAY,0BAClCnC,EACF,sBAAIiC,MAAO,CAAEE,UAAW,SAAUG,MAAO,QAAUtC,GAEnD,gBAAC,UAAQ,CACPuC,WAlBS,CACjBC,kBAAmB,CAAEC,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAAQC,MAAO,GAClEC,QAAS,CAAEJ,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAAOC,MAAO,GACvDE,OAAQ,CAAEL,WAAY,CAAEC,IAAK,IAAKC,IAAK,KAAOC,MAAO,GACrDG,OAAQ,CAAEN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAAKC,MAAO,IAe3CI,UAAQ,EACRC,UAAQ,EACRC,YAAU,EACVC,UAAU,8BACVC,eAAe,sBAEdzD,EACE0D,QAAQ1B,GAAYA,EAAQ2B,aAA8C,KAA/B3B,EAAQ2B,YAAYC,SAC/D3C,KAAKe,GACJ,uBAAK6B,IAAK7B,EAAQ8B,GAAIxB,MAAO,CAAEyB,QAAS,OAAQC,eAAgB,SAAUzB,QAAS,QACjF,gBAAC,IAAQ,CACPlB,MAAOW,EAAQC,KACf0B,YAAa3B,EAAQ2B,YACrBM,KAAMjC,EAAQkC,SACdhD,MAAOc,EAAQd,aAOtB,C","sources":["webpack://gatsby-starter-default/./src/pages/projects.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../components/layout';\nimport DataCard from '../components/DataCard';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n\n\n// Load environment variables\nconst UNSPLASH_ACCESS_KEY = process.env.GATSBY_UNSPLASH_ACCESS_KEY;\n\nconst generatePlaceholderImage = async (title) => {\n  try {\n    console.log(\"Fetching Unsplash image for:\", title);\n    const response = await axios.get(`https://api.unsplash.com/photos/random`, {\n      params: { query: title, orientation: 'landscape' },\n      headers: { Authorization: `Client-ID ${UNSPLASH_ACCESS_KEY}` },\n    });\n    console.log(\"Unsplash Response:\", response.data.urls.regular);\n    return response.data.urls.regular;\n  } catch (error) {\n    console.error('Error fetching Unsplash image:', error.response ? error.response.data : error.message);\n    return `https://api.oneapipro.com/images/placeholder?text=${encodeURIComponent(title)}&width=318&height=200&color=524d66d`;\n  }\n};\n\nconst ProjectsPage = () => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchGitHubProjects = async () => {\n      try {\n        const githubUsername = 'ballack96'; // Replace with your GitHub username\n        const response = await axios.get(`https://api.github.com/users/${githubUsername}/repos?sort=updated`);\n\n        if (response.data) {\n          const formattedProjects = await Promise.all(\n            response.data.map(async (project) => {\n              const image = (await generatePlaceholderImage(project.name));\n              return {\n                ...project,\n                name: project.name\n                  .replace(/-/g, ' ') // Replace hyphens with spaces\n                  .replace(/\\b\\w/g, (match) => match.toUpperCase()), // Capitalize each word\n                image,\n              };\n            })\n          );\n          setProjects(formattedProjects);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching GitHub projects:', error);\n        setError('Failed to load GitHub projects. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchGitHubProjects();\n  }, []);\n\n\n  const responsive = {\n    superLargeDesktop: { breakpoint: { max: 4000, min: 1024 }, items: 1 },\n    desktop: { breakpoint: { max: 1024, min: 768 }, items: 2 },\n    tablet: { breakpoint: { max: 768, min: 464 }, items: 2 },\n    mobile: { breakpoint: { max: 464, min: 0 }, items: 1 },\n  };\n\n\n  return (\n    <Layout>\n      <section style={{ padding: '1rem', textAlign: 'center' }}>\n      <h2 style={{ marginBottom: '2rem', fontSize: '2rem', color: '#34495E' }}>üõ†Ô∏è My Projects</h2>\n      {loading ? (\n          <h3 style={{ textAlign: 'center' }}>üîÑ Loading projects...</h3>\n        ) : error ? (\n          <h3 style={{ textAlign: 'center', color: 'red' }}>{error}</h3>\n        ) : (\n          <Carousel\n            responsive={responsive}\n            infinite\n            autoPlay\n            centerMode\n            itemClass=\"carousel-item-padding-40-px\"\n            containerClass=\"carousel-container\"\n          >\n            {projects\n              .filter((project) => project.description && project.description.trim() !== '')\n              .map((project) => (\n                <div key={project.id} style={{ display: 'flex', justifyContent: 'center', padding: '5px' }}>\n                  <DataCard\n                    title={project.name}\n                    description={project.description}\n                    link={project.html_url}\n                    image={project.image}\n                  />\n                </div>\n              ))}\n          </Carousel>\n      )}\n      </section>\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["UNSPLASH_ACCESS_KEY","process","GATSBY_UNSPLASH_ACCESS_KEY","projects","setProjects","useState","loading","setLoading","error","setError","useEffect","async","githubUsername","response","axios","get","data","formattedProjects","Promise","all","map","image","console","log","title","params","query","orientation","headers","Authorization","urls","regular","message","encodeURIComponent","generatePlaceholderImage","project","name","replace","match","toUpperCase","fetchGitHubProjects","style","padding","textAlign","marginBottom","fontSize","color","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","infinite","autoPlay","centerMode","itemClass","containerClass","filter","description","trim","key","id","display","justifyContent","link","html_url"],"sourceRoot":""}